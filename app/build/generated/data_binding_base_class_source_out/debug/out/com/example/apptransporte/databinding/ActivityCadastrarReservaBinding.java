// Generated by view binder compiler. Do not edit!
package com.example.apptransporte.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.apptransporte.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCadastrarReservaBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonEnviar;

  @NonNull
  public final CheckBox checkBoxQuarta;

  @NonNull
  public final CheckBox checkBoxQuinta;

  @NonNull
  public final CheckBox checkBoxSegunda;

  @NonNull
  public final CheckBox checkBoxSexta;

  @NonNull
  public final CheckBox checkBoxTerca;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final Spinner spinnerDesQuarta;

  @NonNull
  public final Spinner spinnerDesQuinta;

  @NonNull
  public final Spinner spinnerDesSegunda;

  @NonNull
  public final Spinner spinnerDesSexta;

  @NonNull
  public final Spinner spinnerDesTerca;

  @NonNull
  public final Spinner spinnerEmbQuarta;

  @NonNull
  public final Spinner spinnerEmbQuinta;

  @NonNull
  public final Spinner spinnerEmbSegunda;

  @NonNull
  public final Spinner spinnerEmbSexta;

  @NonNull
  public final Spinner spinnerEmbTerca;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textViewTituloReserva;

  private ActivityCadastrarReservaBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonEnviar, @NonNull CheckBox checkBoxQuarta,
      @NonNull CheckBox checkBoxQuinta, @NonNull CheckBox checkBoxSegunda,
      @NonNull CheckBox checkBoxSexta, @NonNull CheckBox checkBoxTerca,
      @NonNull ConstraintLayout main, @NonNull Spinner spinnerDesQuarta,
      @NonNull Spinner spinnerDesQuinta, @NonNull Spinner spinnerDesSegunda,
      @NonNull Spinner spinnerDesSexta, @NonNull Spinner spinnerDesTerca,
      @NonNull Spinner spinnerEmbQuarta, @NonNull Spinner spinnerEmbQuinta,
      @NonNull Spinner spinnerEmbSegunda, @NonNull Spinner spinnerEmbSexta,
      @NonNull Spinner spinnerEmbTerca, @NonNull TextView textView2,
      @NonNull TextView textViewTituloReserva) {
    this.rootView = rootView;
    this.buttonEnviar = buttonEnviar;
    this.checkBoxQuarta = checkBoxQuarta;
    this.checkBoxQuinta = checkBoxQuinta;
    this.checkBoxSegunda = checkBoxSegunda;
    this.checkBoxSexta = checkBoxSexta;
    this.checkBoxTerca = checkBoxTerca;
    this.main = main;
    this.spinnerDesQuarta = spinnerDesQuarta;
    this.spinnerDesQuinta = spinnerDesQuinta;
    this.spinnerDesSegunda = spinnerDesSegunda;
    this.spinnerDesSexta = spinnerDesSexta;
    this.spinnerDesTerca = spinnerDesTerca;
    this.spinnerEmbQuarta = spinnerEmbQuarta;
    this.spinnerEmbQuinta = spinnerEmbQuinta;
    this.spinnerEmbSegunda = spinnerEmbSegunda;
    this.spinnerEmbSexta = spinnerEmbSexta;
    this.spinnerEmbTerca = spinnerEmbTerca;
    this.textView2 = textView2;
    this.textViewTituloReserva = textViewTituloReserva;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCadastrarReservaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCadastrarReservaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_cadastrar_reserva, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCadastrarReservaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_Enviar;
      Button buttonEnviar = ViewBindings.findChildViewById(rootView, id);
      if (buttonEnviar == null) {
        break missingId;
      }

      id = R.id.checkBox_Quarta;
      CheckBox checkBoxQuarta = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxQuarta == null) {
        break missingId;
      }

      id = R.id.checkBox_Quinta;
      CheckBox checkBoxQuinta = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxQuinta == null) {
        break missingId;
      }

      id = R.id.checkBox_Segunda;
      CheckBox checkBoxSegunda = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxSegunda == null) {
        break missingId;
      }

      id = R.id.checkBox_Sexta;
      CheckBox checkBoxSexta = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxSexta == null) {
        break missingId;
      }

      id = R.id.checkBox_Terca;
      CheckBox checkBoxTerca = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxTerca == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.spinner_DesQuarta;
      Spinner spinnerDesQuarta = ViewBindings.findChildViewById(rootView, id);
      if (spinnerDesQuarta == null) {
        break missingId;
      }

      id = R.id.spinner_DesQuinta;
      Spinner spinnerDesQuinta = ViewBindings.findChildViewById(rootView, id);
      if (spinnerDesQuinta == null) {
        break missingId;
      }

      id = R.id.spinner_DesSegunda;
      Spinner spinnerDesSegunda = ViewBindings.findChildViewById(rootView, id);
      if (spinnerDesSegunda == null) {
        break missingId;
      }

      id = R.id.spinner_DesSexta;
      Spinner spinnerDesSexta = ViewBindings.findChildViewById(rootView, id);
      if (spinnerDesSexta == null) {
        break missingId;
      }

      id = R.id.spinner_DesTerca;
      Spinner spinnerDesTerca = ViewBindings.findChildViewById(rootView, id);
      if (spinnerDesTerca == null) {
        break missingId;
      }

      id = R.id.spinner_EmbQuarta;
      Spinner spinnerEmbQuarta = ViewBindings.findChildViewById(rootView, id);
      if (spinnerEmbQuarta == null) {
        break missingId;
      }

      id = R.id.spinner_EmbQuinta;
      Spinner spinnerEmbQuinta = ViewBindings.findChildViewById(rootView, id);
      if (spinnerEmbQuinta == null) {
        break missingId;
      }

      id = R.id.spinner_EmbSegunda;
      Spinner spinnerEmbSegunda = ViewBindings.findChildViewById(rootView, id);
      if (spinnerEmbSegunda == null) {
        break missingId;
      }

      id = R.id.spinner_EmbSexta;
      Spinner spinnerEmbSexta = ViewBindings.findChildViewById(rootView, id);
      if (spinnerEmbSexta == null) {
        break missingId;
      }

      id = R.id.spinner_EmbTerca;
      Spinner spinnerEmbTerca = ViewBindings.findChildViewById(rootView, id);
      if (spinnerEmbTerca == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView_TituloReserva;
      TextView textViewTituloReserva = ViewBindings.findChildViewById(rootView, id);
      if (textViewTituloReserva == null) {
        break missingId;
      }

      return new ActivityCadastrarReservaBinding((ConstraintLayout) rootView, buttonEnviar,
          checkBoxQuarta, checkBoxQuinta, checkBoxSegunda, checkBoxSexta, checkBoxTerca, main,
          spinnerDesQuarta, spinnerDesQuinta, spinnerDesSegunda, spinnerDesSexta, spinnerDesTerca,
          spinnerEmbQuarta, spinnerEmbQuinta, spinnerEmbSegunda, spinnerEmbSexta, spinnerEmbTerca,
          textView2, textViewTituloReserva);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
